Alright, homework for this week

So our Excellent Hotel client was so happy with our solution to their Really Crappy Custom Software problem that they have referred us onto one of their contacts, Expensive Cruises

Expensive Cruises has an excellent photography portfolio, which they have uploaded to their to their webserver. They now want to be able let their customers view these images, and to let travel agents and other resellers view and download these images

Exercise One: Writing a class; File system functions; While loops

1. Write a class that will look through a directory for all JPEG files contained within
2. Return the HTML required to output a list of images to the user, through <img src=""> (not just names).

Hints:
readdir() native PHP function
http://php.net/manual/en/function.readdir.php

Other directory functions
http://php.net/manual/en/ref.dir.php


Exercise Two: Calling a class

1. Create a frontend user page that will output the contents of "photos", directory by directory.

e.g. 
<h2>Landscape</h2>
<?php echo $gallery = functionName($landscapeDirectory);?>

<h2>Wildlife</h2>
<?php echo $galleryW = functionName($wildlifeDirectory);?>


Exercise Three: Calling a class; using native PHP classes; While loops

1. Create a privileged user page that is the same as the frontend page.
2. Allow these users to download a zip folder of all the photos of each directory inside "photos".

Hints: 
The ZipArchive native PHP class
http://php.net/manual/en/class.ziparchive.php

ZipArchive::addFile
http://php.net/manual/en/ziparchive.addfile.php


Advanced Questions:
1. Our client is hosting their website on a Linux server. This means any directory function we use will include the default . and .. (links to current directory and parent directory respectively). How can we get rid of these to make sure we are only getting the image files? What other handling do we need to make sure we're only outputting our JPEGS and no other files?
2. The client wants to update this to display the file name, dimensions, and file size of each image. How can we do this in an efficient way?
3. How would we handle it if the client wanted to add the ability for photos to have a caption? (this one is for pondering, not implementation).

Hints:
is_file() native PHP function
http://php.net/manual/en/function.is-file.php

getimagesize() native PHP function
http://php.net/manual/en/function.getimagesize.php


Expectations:
Don't overcomplicate matters, your class only needs a couple of methods. The brief above doesn't create a compelling case for using child classes.

Your privileged user page would have password protection IRL, do not implement this for this exercise.

Don't go to town on HTML/CSS, use only the absolute minimum to make the page adequately laid out. We're just focussing on the PHP side of things for this course, it's better to not waste time on making things look pretty.
